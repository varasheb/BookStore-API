{
  "openapi": "3.0.0",
  "info": {
    "title": "BookStore Application",
    "version": "1.0.0",
    "description": "Welcome to the API documentation for the Bookstore Application. This API provides a comprehensive set of endpoints for managing a digital bookstore, including user registration and authentication, book management, cart operations, wishlist functionalities, order processing, and user address handling."
  },
  "servers": [
    {
      "url": "http://localhost:3000/api/v1",
      "description": "Local server"
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "tags": [
    {
      "name": "Users",
      "description": "User management"
    },
    {
      "name": "Books",
      "description": "Book management"
    },
    {
      "name": "Cart",
      "description": "Cart management"
    },
    {
      "name": "Wishlist",
      "description": "Wishlist management"
    },
    {
      "name": "Orders",
      "description": "Order management"
    },
    {
      "name": "Address",
      "description": "Address management"
    }
  ],
  "paths": {
    "/users": {
      "post": {
        "tags": ["Users"],
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "email": { "type": "string" },
                  "mobile": { "type": "string" },
                  "password": { "type": "string" },
                  "role": { "type": "string" }
                },
                "required": ["name", "email", "mobile", "password"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "number" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "number" },
                        "name": { "type": "string" },
                        "email": { "type": "string" },
                        "mobile": { "type": "string" },
                        "role": { "type": "string" },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" }
                      }
                    },
                    "message": { "type": "string" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "number" },
                    "message": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Users"],
        "summary": "Log in a user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string" },
                  "password": { "type": "string" }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User login successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "number" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "id": { "type": "number" },
                            "name": { "type": "string" },
                            "email": { "type": "string" },
                            "mobile": { "type": "string" },
                            "role": { "type": "string" },
                            "createdAt": { "type": "string" },
                            "updatedAt": { "type": "string" }
                          }
                        },
                        "token": { "type": "string" }
                      }
                    },
                    "message": { "type": "string" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "number" },
                    "message": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/forgotpassword": {
      "post": {
        "tags": ["Users"],
        "summary": "Send a password reset link",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string" }
                },
                "required": ["email"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Mail sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "number" },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "number" },
                        "name": { "type": "string" },
                        "email": { "type": "string" },
                        "mobile": { "type": "string" },
                        "role": { "type": "string" },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" }
                      }
                    },
                    "token": { "type": "string" },
                    "message": { "type": "string" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "number" },
                    "message": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/resetpassword": {
      "post": {
        "tags": ["Users"],
        "summary": "Reset user password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": { "type": "string" }
                },
                "required": ["password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password Reset successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "number" },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "number" },
                        "name": { "type": "string" },
                        "email": { "type": "string" },
                        "mobile": { "type": "string" },
                        "role": { "type": "string" },
                        "createdAt": { "type": "string" },
                        "updatedAt": { "type": "string" }
                      }
                    },
                    "message": { "type": "string" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "number" },
                    "message": { "type": "string" }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/books": {
      "post": {
        "tags": ["Books"],
        "summary": "Add a new book",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": { "type": "string" },
                  "discountPrice": { "type": "number" },
                  "bookImage": { "type": "string", "format": "url" },
                  "bookName": { "type": "string" },
                  "author": { "type": "string" },
                  "quantity": { "type": "integer" },
                  "price": { "type": "number" }
                },
                "required": [
                  "description",
                  "discountPrice",
                  "bookImage",
                  "bookName",
                  "author",
                  "quantity",
                  "price"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Book successfully added"
          },
          "400": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "tags": ["Books"],
        "summary": "Get all books",
        "responses": {
          "200": {
            "description": "A list of books"
          }
        }
      }
    },
    "/books/{id}": {
      "get": {
        "tags": ["Books"],
        "summary": "Get a book by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Book details"
          },
          "400": {
            "description": "Book not found"
          }
        }
      },
      "put": {
        "tags": ["Books"],
        "summary": "Update a book by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": { "type": "string" },
                  "discountPrice": { "type": "number" },
                  "bookImage": { "type": "string", "format": "url" },
                  "bookName": { "type": "string" },
                  "author": { "type": "string" },
                  "quantity": { "type": "integer" },
                  "price": { "type": "number" }
                },
                "required": [
                  "description",
                  "discountPrice",
                  "bookImage",
                  "bookName",
                  "author",
                  "quantity",
                  "price"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Book successfully updated"
          },
          "400": {
            "description": "Book not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": ["Books"],
        "summary": "Delete a book by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Book successfully deleted"
          },
          "400": {
            "description": "Book not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/cart": {
      "get": {
        "tags": ["Cart"],
        "summary": "Get all items from the cart",
        "responses": {
          "200": {
            "description": "List of items in the cart"
          },
          "400": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/cart/{id}": {
      "post": {
        "tags": ["Cart"],
        "summary": "Add a book to the cart",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Book added to cart successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": ["Cart"],
        "summary": "Remove a book from the cart",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Book removed from cart successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/wishlist": {
      "get": {
        "tags": ["Wishlist"],
        "summary": "Get the wishlist",
        "responses": {
          "200": {
            "description": "A list of items in the wishlist"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/wishlist/{id}": {
      "post": {
        "tags": ["Wishlist"],
        "summary": "Add an item to the wishlist",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Item successfully added to the wishlist"
          },
          "400": {
            "description": "Item not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": ["Wishlist"],
        "summary": "Remove an item from the wishlist",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Item successfully removed from the wishlist"
          },
          "400": {
            "description": "Item not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/order": {
      "get": {
        "tags": ["Orders"],
        "summary": "Get all orders",
        "responses": {
          "200": {
            "description": "A list of orders"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/order/{id}": {
      "post": {
        "tags": ["Orders"],
        "summary": "Create a new order",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Address ID for the new order"
          }
        ],
        "requestBody": {
          "required": false
        },
        "responses": {
          "201": {
            "description": "Order created successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "tags": ["Orders"],
        "summary": "Update an order by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Order ID to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": { "type": "string" },
                  "paymentStatus": { "type": "string" }
                },
                "required": ["status", "paymentStatus"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order updated successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Order not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": ["Orders"],
        "summary": "Cancel an order by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Order ID to Canceled"
          }
        ],
        "responses": {
          "200": {
            "description": "Order Cancelled successfully"
          },
          "404": {
            "description": "Order not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/address": {
      "get": {
        "tags": ["Addresses"],
        "summary": "Get all addresses",
        "responses": {
          "200": {
            "description": "A list of addresses"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "post": {
        "tags": ["Addresses"],
        "summary": "Create a new address",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "addressType": { "type": "string" },
                  "addressLine1": { "type": "string" },
                  "addressLine2": { "type": "string" },
                  "city": { "type": "string" },
                  "state": { "type": "string" },
                  "postalCode": { "type": "string" },
                  "country": { "type": "string" }
                },
                "required": [
                  "addressType",
                  "addressLine1",
                  "city",
                  "state",
                  "postalCode",
                  "country"
                ]
              }
            }
          }
        },
          "responses": {
            "201": {
              "description": "Address created successfully"
            },
            "400": {
              "description": "Invalid input"
            }
          },
          "security": [
            {
              "BearerAuth": []
            }
          ]
        }
    },
    "/address/{id}": {
      "put": {
        "tags": ["Addresses"],
        "summary": "Update an address by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "addressType": { "type": "string" },
                  "addressLine1": { "type": "string" },
                  "addressLine2": { "type": "string" },
                  "city": { "type": "string" },
                  "state": { "type": "string" },
                  "postalCode": { "type": "string" },
                  "country": { "type": "string" }
                },
                "required": [
                  "addressType",
                  "addressLine1",
                  "city",
                  "state",
                  "postalCode",
                  "country"
                ]
              }
            }
          }
          },
          "responses": {
            "200": {
              "description": "Address updated successfully"
            },
            "400": {
              "description": "Invalid input"
            }
          },
          "security": [
            {
              "BearerAuth": []
            }
          ]
      },
      "delete": {
        "tags": ["Addresses"],
        "summary": "Delete an address by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Address deleted successfully"
          },
          "404": {
            "description": "Address not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    }
  }
}
